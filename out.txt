CommandLine { command: Lex { source_files: ["."] } }
Tokens for example.gno:
Token: Monoline Comment
Token Value: " This is a comment"
Token String: "## This is a comment"
Span: Span {
    byte_span: 0..20,
    line_span: LineSpan {
        lines: 1..=1,
        start_line_column: 0,
        end_line_column: 20,
    },
}
-----------------
Token: Multiline Comment
Token Value: "\n    Multi\n        Line\n            Comment!\n"
Token String: "#$\n    Multi\n        Line\n            Comment!\n$#"
Span: Span {
    byte_span: 22..71,
    line_span: LineSpan {
        lines: 3..=7,
        start_line_column: 0,
        end_line_column: 2,
    },
}
-----------------
Token: Let Keyword
Token Value: No Value
Token String: "let"
Span: Span {
    byte_span: 73..76,
    line_span: LineSpan {
        lines: 9..=9,
        start_line_column: 0,
        end_line_column: 3,
    },
}
-----------------
Token: Identifier
Token Value: "global_name"
Token String: "global_name"
Span: Span {
    byte_span: 77..88,
    line_span: LineSpan {
        lines: 9..=9,
        start_line_column: 4,
        end_line_column: 15,
    },
}
-----------------
Token: Equals
Token Value: No Value
Token String: "="
Span: Span {
    byte_span: 89..90,
    line_span: LineSpan {
        lines: 9..=9,
        start_line_column: 16,
        end_line_column: 17,
    },
}
-----------------
Token: String Literal
Token Value: "This Global Variable Was Created By Noah"
Token String: "\"This Global Variable Was Created By Noah\""
Span: Span {
    byte_span: 91..133,
    line_span: LineSpan {
        lines: 9..=9,
        start_line_column: 18,
        end_line_column: 60,
    },
}
-----------------
Token: Semicolon
Token Value: No Value
Token String: ";"
Span: Span {
    byte_span: 133..134,
    line_span: LineSpan {
        lines: 9..=9,
        start_line_column: 60,
        end_line_column: 61,
    },
}
-----------------
Token: Monoline Comment
Token Value: " Entrypoint"
Token String: "## Entrypoint"
Span: Span {
    byte_span: 136..149,
    line_span: LineSpan {
        lines: 11..=11,
        start_line_column: 0,
        end_line_column: 13,
    },
}
-----------------
Token: Function Keyword
Token Value: No Value
Token String: "fun"
Span: Span {
    byte_span: 150..153,
    line_span: LineSpan {
        lines: 12..=12,
        start_line_column: 0,
        end_line_column: 3,
    },
}
-----------------
Token: Identifier
Token Value: "main"
Token String: "main"
Span: Span {
    byte_span: 154..158,
    line_span: LineSpan {
        lines: 12..=12,
        start_line_column: 4,
        end_line_column: 8,
    },
}
-----------------
Token: Colon
Token Value: No Value
Token String: ":"
Span: Span {
    byte_span: 158..159,
    line_span: LineSpan {
        lines: 12..=12,
        start_line_column: 8,
        end_line_column: 9,
    },
}
-----------------
Token: Identifier
Token Value: "usize"
Token String: "usize"
Span: Span {
    byte_span: 160..165,
    line_span: LineSpan {
        lines: 12..=12,
        start_line_column: 10,
        end_line_column: 15,
    },
}
-----------------
Token: Asperand
Token Value: No Value
Token String: "@"
Span: Span {
    byte_span: 166..167,
    line_span: LineSpan {
        lines: 12..=12,
        start_line_column: 16,
        end_line_column: 17,
    },
}
-----------------
Token: Identifier
Token Value: "args"
Token String: "args"
Span: Span {
    byte_span: 168..172,
    line_span: LineSpan {
        lines: 12..=12,
        start_line_column: 18,
        end_line_column: 22,
    },
}
-----------------
Token: Colon
Token Value: No Value
Token String: ":"
Span: Span {
    byte_span: 172..173,
    line_span: LineSpan {
        lines: 12..=12,
        start_line_column: 22,
        end_line_column: 23,
    },
}
-----------------
Token: Opening Bracket
Token Value: No Value
Token String: "["
Span: Span {
    byte_span: 174..175,
    line_span: LineSpan {
        lines: 12..=12,
        start_line_column: 24,
        end_line_column: 25,
    },
}
-----------------
Token: Closing Bracket
Token Value: No Value
Token String: "]"
Span: Span {
    byte_span: 175..176,
    line_span: LineSpan {
        lines: 12..=12,
        start_line_column: 25,
        end_line_column: 26,
    },
}
-----------------
Token: String Type
Token Value: No Value
Token String: "str"
Span: Span {
    byte_span: 176..179,
    line_span: LineSpan {
        lines: 12..=12,
        start_line_column: 26,
        end_line_column: 29,
    },
}
-----------------
Token: Opening Brace
Token Value: No Value
Token String: "{"
Span: Span {
    byte_span: 180..181,
    line_span: LineSpan {
        lines: 12..=12,
        start_line_column: 30,
        end_line_column: 31,
    },
}
-----------------
Token: Let Keyword
Token Value: No Value
Token String: "let"
Span: Span {
    byte_span: 186..189,
    line_span: LineSpan {
        lines: 13..=13,
        start_line_column: 4,
        end_line_column: 7,
    },
}
-----------------
Token: Identifier
Token Value: "name"
Token String: "name"
Span: Span {
    byte_span: 190..194,
    line_span: LineSpan {
        lines: 13..=13,
        start_line_column: 8,
        end_line_column: 12,
    },
}
-----------------
Token: Colon
Token Value: No Value
Token String: ":"
Span: Span {
    byte_span: 194..195,
    line_span: LineSpan {
        lines: 13..=13,
        start_line_column: 12,
        end_line_column: 13,
    },
}
-----------------
Token: String Type
Token Value: No Value
Token String: "str"
Span: Span {
    byte_span: 196..199,
    line_span: LineSpan {
        lines: 13..=13,
        start_line_column: 14,
        end_line_column: 17,
    },
}
-----------------
Token: Equals
Token Value: No Value
Token String: "="
Span: Span {
    byte_span: 200..201,
    line_span: LineSpan {
        lines: 13..=13,
        start_line_column: 18,
        end_line_column: 19,
    },
}
-----------------
Token: String Literal
Token Value: "Noah"
Token String: "\"Noah\""
Span: Span {
    byte_span: 202..208,
    line_span: LineSpan {
        lines: 13..=13,
        start_line_column: 20,
        end_line_column: 26,
    },
}
-----------------
Token: Semicolon
Token Value: No Value
Token String: ";"
Span: Span {
    byte_span: 208..209,
    line_span: LineSpan {
        lines: 13..=13,
        start_line_column: 26,
        end_line_column: 27,
    },
}
-----------------
Token: Let Keyword
Token Value: No Value
Token String: "let"
Span: Span {
    byte_span: 214..217,
    line_span: LineSpan {
        lines: 14..=14,
        start_line_column: 4,
        end_line_column: 7,
    },
}
-----------------
Token: Identifier
Token Value: "first"
Token String: "first"
Span: Span {
    byte_span: 218..223,
    line_span: LineSpan {
        lines: 14..=14,
        start_line_column: 8,
        end_line_column: 13,
    },
}
-----------------
Token: Colon
Token Value: No Value
Token String: ":"
Span: Span {
    byte_span: 223..224,
    line_span: LineSpan {
        lines: 14..=14,
        start_line_column: 13,
        end_line_column: 14,
    },
}
-----------------
Token: Identifier
Token Value: "f32"
Token String: "f32"
Span: Span {
    byte_span: 225..228,
    line_span: LineSpan {
        lines: 14..=14,
        start_line_column: 15,
        end_line_column: 18,
    },
}
-----------------
Token: Equals
Token Value: No Value
Token String: "="
Span: Span {
    byte_span: 229..230,
    line_span: LineSpan {
        lines: 14..=14,
        start_line_column: 19,
        end_line_column: 20,
    },
}
-----------------
Token: Floating Point Literal
Token Value: "11.0"
Token String: "11.0"
Span: Span {
    byte_span: 231..235,
    line_span: LineSpan {
        lines: 14..=14,
        start_line_column: 21,
        end_line_column: 25,
    },
}
-----------------
Token: Semicolon
Token Value: No Value
Token String: ";"
Span: Span {
    byte_span: 235..236,
    line_span: LineSpan {
        lines: 14..=14,
        start_line_column: 25,
        end_line_column: 26,
    },
}
-----------------
Token: Let Keyword
Token Value: No Value
Token String: "let"
Span: Span {
    byte_span: 241..244,
    line_span: LineSpan {
        lines: 15..=15,
        start_line_column: 4,
        end_line_column: 7,
    },
}
-----------------
Token: Identifier
Token Value: "second"
Token String: "second"
Span: Span {
    byte_span: 245..251,
    line_span: LineSpan {
        lines: 15..=15,
        start_line_column: 8,
        end_line_column: 14,
    },
}
-----------------
Token: Colon
Token Value: No Value
Token String: ":"
Span: Span {
    byte_span: 251..252,
    line_span: LineSpan {
        lines: 15..=15,
        start_line_column: 14,
        end_line_column: 15,
    },
}
-----------------
Token: Identifier
Token Value: "usize"
Token String: "usize"
Span: Span {
    byte_span: 253..258,
    line_span: LineSpan {
        lines: 15..=15,
        start_line_column: 16,
        end_line_column: 21,
    },
}
-----------------
Token: Equals
Token Value: No Value
Token String: "="
Span: Span {
    byte_span: 259..260,
    line_span: LineSpan {
        lines: 15..=15,
        start_line_column: 22,
        end_line_column: 23,
    },
}
-----------------
Token: Integer Literal
Token Value: "6"
Token String: "6"
Span: Span {
    byte_span: 261..262,
    line_span: LineSpan {
        lines: 15..=15,
        start_line_column: 24,
        end_line_column: 25,
    },
}
-----------------
Token: Semicolon
Token Value: No Value
Token String: ";"
Span: Span {
    byte_span: 262..263,
    line_span: LineSpan {
        lines: 15..=15,
        start_line_column: 25,
        end_line_column: 26,
    },
}
-----------------
Token: Let Keyword
Token Value: No Value
Token String: "let"
Span: Span {
    byte_span: 268..271,
    line_span: LineSpan {
        lines: 16..=16,
        start_line_column: 4,
        end_line_column: 7,
    },
}
-----------------
Token: Identifier
Token Value: "age"
Token String: "age"
Span: Span {
    byte_span: 272..275,
    line_span: LineSpan {
        lines: 16..=16,
        start_line_column: 8,
        end_line_column: 11,
    },
}
-----------------
Token: Colon
Token Value: No Value
Token String: ":"
Span: Span {
    byte_span: 275..276,
    line_span: LineSpan {
        lines: 16..=16,
        start_line_column: 11,
        end_line_column: 12,
    },
}
-----------------
Token: Identifier
Token Value: "f32"
Token String: "f32"
Span: Span {
    byte_span: 277..280,
    line_span: LineSpan {
        lines: 16..=16,
        start_line_column: 13,
        end_line_column: 16,
    },
}
-----------------
Token: Equals
Token Value: No Value
Token String: "="
Span: Span {
    byte_span: 281..282,
    line_span: LineSpan {
        lines: 16..=16,
        start_line_column: 17,
        end_line_column: 18,
    },
}
-----------------
Token: Identifier
Token Value: "add"
Token String: "add"
Span: Span {
    byte_span: 283..286,
    line_span: LineSpan {
        lines: 16..=16,
        start_line_column: 19,
        end_line_column: 22,
    },
}
-----------------
Token: Asperand
Token Value: No Value
Token String: "@"
Span: Span {
    byte_span: 287..288,
    line_span: LineSpan {
        lines: 16..=16,
        start_line_column: 23,
        end_line_column: 24,
    },
}
-----------------
Token: Identifier
Token Value: "first"
Token String: "first"
Span: Span {
    byte_span: 289..294,
    line_span: LineSpan {
        lines: 16..=16,
        start_line_column: 25,
        end_line_column: 30,
    },
}
-----------------
Token: Comma
Token Value: No Value
Token String: ","
Span: Span {
    byte_span: 294..295,
    line_span: LineSpan {
        lines: 16..=16,
        start_line_column: 30,
        end_line_column: 31,
    },
}
-----------------
Token: Identifier
Token Value: "second"
Token String: "second"
Span: Span {
    byte_span: 296..302,
    line_span: LineSpan {
        lines: 16..=16,
        start_line_column: 32,
        end_line_column: 38,
    },
}
-----------------
Token: Semicolon
Token Value: No Value
Token String: ";"
Span: Span {
    byte_span: 302..303,
    line_span: LineSpan {
        lines: 16..=16,
        start_line_column: 38,
        end_line_column: 39,
    },
}
-----------------
Token: Let Keyword
Token Value: No Value
Token String: "let"
Span: Span {
    byte_span: 308..311,
    line_span: LineSpan {
        lines: 17..=17,
        start_line_column: 4,
        end_line_column: 7,
    },
}
-----------------
Token: Identifier
Token Value: "new_age"
Token String: "new_age"
Span: Span {
    byte_span: 312..319,
    line_span: LineSpan {
        lines: 17..=17,
        start_line_column: 8,
        end_line_column: 15,
    },
}
-----------------
Token: Colon
Token Value: No Value
Token String: ":"
Span: Span {
    byte_span: 319..320,
    line_span: LineSpan {
        lines: 17..=17,
        start_line_column: 15,
        end_line_column: 16,
    },
}
-----------------
Token: Identifier
Token Value: "f32"
Token String: "f32"
Span: Span {
    byte_span: 321..324,
    line_span: LineSpan {
        lines: 17..=17,
        start_line_column: 17,
        end_line_column: 20,
    },
}
-----------------
Token: Equals
Token Value: No Value
Token String: "="
Span: Span {
    byte_span: 325..326,
    line_span: LineSpan {
        lines: 17..=17,
        start_line_column: 21,
        end_line_column: 22,
    },
}
-----------------
Token: Identifier
Token Value: "add"
Token String: "add"
Span: Span {
    byte_span: 327..330,
    line_span: LineSpan {
        lines: 17..=17,
        start_line_column: 23,
        end_line_column: 26,
    },
}
-----------------
Token: Asperand
Token Value: No Value
Token String: "@"
Span: Span {
    byte_span: 331..332,
    line_span: LineSpan {
        lines: 17..=17,
        start_line_column: 27,
        end_line_column: 28,
    },
}
-----------------
Token: Identifier
Token Value: "first"
Token String: "first"
Span: Span {
    byte_span: 333..338,
    line_span: LineSpan {
        lines: 17..=17,
        start_line_column: 29,
        end_line_column: 34,
    },
}
-----------------
Token: Comma
Token Value: No Value
Token String: ","
Span: Span {
    byte_span: 338..339,
    line_span: LineSpan {
        lines: 17..=17,
        start_line_column: 34,
        end_line_column: 35,
    },
}
-----------------
Token: Opening Parenthesis
Token Value: No Value
Token String: "("
Span: Span {
    byte_span: 340..341,
    line_span: LineSpan {
        lines: 17..=17,
        start_line_column: 36,
        end_line_column: 37,
    },
}
-----------------
Token: Identifier
Token Value: "add"
Token String: "add"
Span: Span {
    byte_span: 341..344,
    line_span: LineSpan {
        lines: 17..=17,
        start_line_column: 37,
        end_line_column: 40,
    },
}
-----------------
Token: Asperand
Token Value: No Value
Token String: "@"
Span: Span {
    byte_span: 345..346,
    line_span: LineSpan {
        lines: 17..=17,
        start_line_column: 41,
        end_line_column: 42,
    },
}
-----------------
Token: Identifier
Token Value: "second"
Token String: "second"
Span: Span {
    byte_span: 347..353,
    line_span: LineSpan {
        lines: 17..=17,
        start_line_column: 43,
        end_line_column: 49,
    },
}
-----------------
Token: Comma
Token Value: No Value
Token String: ","
Span: Span {
    byte_span: 353..354,
    line_span: LineSpan {
        lines: 17..=17,
        start_line_column: 49,
        end_line_column: 50,
    },
}
-----------------
Token: Identifier
Token Value: "second"
Token String: "second"
Span: Span {
    byte_span: 355..361,
    line_span: LineSpan {
        lines: 17..=17,
        start_line_column: 51,
        end_line_column: 57,
    },
}
-----------------
Token: Closing Parenthesis
Token Value: No Value
Token String: ")"
Span: Span {
    byte_span: 361..362,
    line_span: LineSpan {
        lines: 17..=17,
        start_line_column: 57,
        end_line_column: 58,
    },
}
-----------------
Token: Semicolon
Token Value: No Value
Token String: ";"
Span: Span {
    byte_span: 362..363,
    line_span: LineSpan {
        lines: 17..=17,
        start_line_column: 58,
        end_line_column: 59,
    },
}
-----------------
Token: Identifier
Token Value: "personPrint"
Token String: "personPrint"
Span: Span {
    byte_span: 369..380,
    line_span: LineSpan {
        lines: 19..=19,
        start_line_column: 4,
        end_line_column: 15,
    },
}
-----------------
Token: Asperand
Token Value: No Value
Token String: "@"
Span: Span {
    byte_span: 381..382,
    line_span: LineSpan {
        lines: 19..=19,
        start_line_column: 16,
        end_line_column: 17,
    },
}
-----------------
Token: Identifier
Token Value: "age"
Token String: "age"
Span: Span {
    byte_span: 383..386,
    line_span: LineSpan {
        lines: 19..=19,
        start_line_column: 18,
        end_line_column: 21,
    },
}
-----------------
Token: Comma
Token Value: No Value
Token String: ","
Span: Span {
    byte_span: 386..387,
    line_span: LineSpan {
        lines: 19..=19,
        start_line_column: 21,
        end_line_column: 22,
    },
}
-----------------
Token: Identifier
Token Value: "name"
Token String: "name"
Span: Span {
    byte_span: 388..392,
    line_span: LineSpan {
        lines: 19..=19,
        start_line_column: 23,
        end_line_column: 27,
    },
}
-----------------
Token: Semicolon
Token Value: No Value
Token String: ";"
Span: Span {
    byte_span: 392..393,
    line_span: LineSpan {
        lines: 19..=19,
        start_line_column: 27,
        end_line_column: 28,
    },
}
-----------------
Token: Return Keyword
Token Value: No Value
Token String: "ret"
Span: Span {
    byte_span: 399..402,
    line_span: LineSpan {
        lines: 21..=21,
        start_line_column: 4,
        end_line_column: 7,
    },
}
-----------------
Token: Integer Literal
Token Value: "0"
Token String: "0"
Span: Span {
    byte_span: 403..404,
    line_span: LineSpan {
        lines: 21..=21,
        start_line_column: 8,
        end_line_column: 9,
    },
}
-----------------
Token: Semicolon
Token Value: No Value
Token String: ";"
Span: Span {
    byte_span: 404..405,
    line_span: LineSpan {
        lines: 21..=21,
        start_line_column: 9,
        end_line_column: 10,
    },
}
-----------------
Token: Closing Brace
Token Value: No Value
Token String: "}"
Span: Span {
    byte_span: 406..407,
    line_span: LineSpan {
        lines: 22..=22,
        start_line_column: 0,
        end_line_column: 1,
    },
}
-----------------
Token: Monoline Comment
Token Value: " Prints a person's age and name."
Token String: "## Prints a person's age and name."
Span: Span {
    byte_span: 409..443,
    line_span: LineSpan {
        lines: 24..=24,
        start_line_column: 0,
        end_line_column: 34,
    },
}
-----------------
Token: Function Keyword
Token Value: No Value
Token String: "fun"
Span: Span {
    byte_span: 444..447,
    line_span: LineSpan {
        lines: 25..=25,
        start_line_column: 0,
        end_line_column: 3,
    },
}
-----------------
Token: Identifier
Token Value: "personPrint"
Token String: "personPrint"
Span: Span {
    byte_span: 448..459,
    line_span: LineSpan {
        lines: 25..=25,
        start_line_column: 4,
        end_line_column: 15,
    },
}
-----------------
Token: Asperand
Token Value: No Value
Token String: "@"
Span: Span {
    byte_span: 460..461,
    line_span: LineSpan {
        lines: 25..=25,
        start_line_column: 16,
        end_line_column: 17,
    },
}
-----------------
Token: Identifier
Token Value: "age"
Token String: "age"
Span: Span {
    byte_span: 462..465,
    line_span: LineSpan {
        lines: 25..=25,
        start_line_column: 18,
        end_line_column: 21,
    },
}
-----------------
Token: Colon
Token Value: No Value
Token String: ":"
Span: Span {
    byte_span: 465..466,
    line_span: LineSpan {
        lines: 25..=25,
        start_line_column: 21,
        end_line_column: 22,
    },
}
-----------------
Token: Identifier
Token Value: "f32"
Token String: "f32"
Span: Span {
    byte_span: 467..470,
    line_span: LineSpan {
        lines: 25..=25,
        start_line_column: 23,
        end_line_column: 26,
    },
}
-----------------
Token: Comma
Token Value: No Value
Token String: ","
Span: Span {
    byte_span: 470..471,
    line_span: LineSpan {
        lines: 25..=25,
        start_line_column: 26,
        end_line_column: 27,
    },
}
-----------------
Token: Identifier
Token Value: "name"
Token String: "name"
Span: Span {
    byte_span: 472..476,
    line_span: LineSpan {
        lines: 25..=25,
        start_line_column: 28,
        end_line_column: 32,
    },
}
-----------------
Token: Colon
Token Value: No Value
Token String: ":"
Span: Span {
    byte_span: 476..477,
    line_span: LineSpan {
        lines: 25..=25,
        start_line_column: 32,
        end_line_column: 33,
    },
}
-----------------
Token: String Type
Token Value: No Value
Token String: "str"
Span: Span {
    byte_span: 478..481,
    line_span: LineSpan {
        lines: 25..=25,
        start_line_column: 34,
        end_line_column: 37,
    },
}
-----------------
Token: Opening Brace
Token Value: No Value
Token String: "{"
Span: Span {
    byte_span: 482..483,
    line_span: LineSpan {
        lines: 25..=25,
        start_line_column: 38,
        end_line_column: 39,
    },
}
-----------------
Token: Identifier
Token Value: "print"
Token String: "print"
Span: Span {
    byte_span: 488..493,
    line_span: LineSpan {
        lines: 26..=26,
        start_line_column: 4,
        end_line_column: 9,
    },
}
-----------------
Token: Asperand
Token Value: No Value
Token String: "@"
Span: Span {
    byte_span: 494..495,
    line_span: LineSpan {
        lines: 26..=26,
        start_line_column: 10,
        end_line_column: 11,
    },
}
-----------------
Token: String Literal
Token Value: "{}'s age: {}"
Token String: "\"{}'s age: {}\""
Span: Span {
    byte_span: 496..510,
    line_span: LineSpan {
        lines: 26..=26,
        start_line_column: 12,
        end_line_column: 26,
    },
}
-----------------
Token: Colon
Token Value: No Value
Token String: ":"
Span: Span {
    byte_span: 511..512,
    line_span: LineSpan {
        lines: 26..=26,
        start_line_column: 27,
        end_line_column: 28,
    },
}
-----------------
Token: Opening Parenthesis
Token Value: No Value
Token String: "("
Span: Span {
    byte_span: 513..514,
    line_span: LineSpan {
        lines: 26..=26,
        start_line_column: 29,
        end_line_column: 30,
    },
}
-----------------
Token: Identifier
Token Value: "name"
Token String: "name"
Span: Span {
    byte_span: 514..518,
    line_span: LineSpan {
        lines: 26..=26,
        start_line_column: 30,
        end_line_column: 34,
    },
}
-----------------
Token: Comma
Token Value: No Value
Token String: ","
Span: Span {
    byte_span: 518..519,
    line_span: LineSpan {
        lines: 26..=26,
        start_line_column: 34,
        end_line_column: 35,
    },
}
-----------------
Token: Identifier
Token Value: "age"
Token String: "age"
Span: Span {
    byte_span: 520..523,
    line_span: LineSpan {
        lines: 26..=26,
        start_line_column: 36,
        end_line_column: 39,
    },
}
-----------------
Token: Closing Parenthesis
Token Value: No Value
Token String: ")"
Span: Span {
    byte_span: 523..524,
    line_span: LineSpan {
        lines: 26..=26,
        start_line_column: 39,
        end_line_column: 40,
    },
}
-----------------
Token: Semicolon
Token Value: No Value
Token String: ";"
Span: Span {
    byte_span: 524..525,
    line_span: LineSpan {
        lines: 26..=26,
        start_line_column: 40,
        end_line_column: 41,
    },
}
-----------------
Token: Closing Brace
Token Value: No Value
Token String: "}"
Span: Span {
    byte_span: 526..527,
    line_span: LineSpan {
        lines: 27..=27,
        start_line_column: 0,
        end_line_column: 1,
    },
}
-----------------
Token: Monoline Comment
Token Value: " Add two values"
Token String: "## Add two values"
Span: Span {
    byte_span: 529..546,
    line_span: LineSpan {
        lines: 29..=29,
        start_line_column: 0,
        end_line_column: 17,
    },
}
-----------------
Token: Function Keyword
Token Value: No Value
Token String: "fun"
Span: Span {
    byte_span: 547..550,
    line_span: LineSpan {
        lines: 30..=30,
        start_line_column: 0,
        end_line_column: 3,
    },
}
-----------------
Token: Identifier
Token Value: "add"
Token String: "add"
Span: Span {
    byte_span: 551..554,
    line_span: LineSpan {
        lines: 30..=30,
        start_line_column: 4,
        end_line_column: 7,
    },
}
-----------------
Token: Colon
Token Value: No Value
Token String: ":"
Span: Span {
    byte_span: 554..555,
    line_span: LineSpan {
        lines: 30..=30,
        start_line_column: 7,
        end_line_column: 8,
    },
}
-----------------
Token: Identifier
Token Value: "f32"
Token String: "f32"
Span: Span {
    byte_span: 556..559,
    line_span: LineSpan {
        lines: 30..=30,
        start_line_column: 9,
        end_line_column: 12,
    },
}
-----------------
Token: Asperand
Token Value: No Value
Token String: "@"
Span: Span {
    byte_span: 560..561,
    line_span: LineSpan {
        lines: 30..=30,
        start_line_column: 13,
        end_line_column: 14,
    },
}
-----------------
Token: Identifier
Token Value: "first"
Token String: "first"
Span: Span {
    byte_span: 562..567,
    line_span: LineSpan {
        lines: 30..=30,
        start_line_column: 15,
        end_line_column: 20,
    },
}
-----------------
Token: Colon
Token Value: No Value
Token String: ":"
Span: Span {
    byte_span: 567..568,
    line_span: LineSpan {
        lines: 30..=30,
        start_line_column: 20,
        end_line_column: 21,
    },
}
-----------------
Token: Floating Point Type
Token Value: No Value
Token String: "float"
Span: Span {
    byte_span: 569..574,
    line_span: LineSpan {
        lines: 30..=30,
        start_line_column: 22,
        end_line_column: 27,
    },
}
-----------------
Token: Comma
Token Value: No Value
Token String: ","
Span: Span {
    byte_span: 574..575,
    line_span: LineSpan {
        lines: 30..=30,
        start_line_column: 27,
        end_line_column: 28,
    },
}
-----------------
Token: Identifier
Token Value: "second"
Token String: "second"
Span: Span {
    byte_span: 576..582,
    line_span: LineSpan {
        lines: 30..=30,
        start_line_column: 29,
        end_line_column: 35,
    },
}
-----------------
Token: Colon
Token Value: No Value
Token String: ":"
Span: Span {
    byte_span: 582..583,
    line_span: LineSpan {
        lines: 30..=30,
        start_line_column: 35,
        end_line_column: 36,
    },
}
-----------------
Token: Identifier
Token Value: "usize"
Token String: "usize"
Span: Span {
    byte_span: 584..589,
    line_span: LineSpan {
        lines: 30..=30,
        start_line_column: 37,
        end_line_column: 42,
    },
}
-----------------
Token: Opening Brace
Token Value: No Value
Token String: "{"
Span: Span {
    byte_span: 590..591,
    line_span: LineSpan {
        lines: 30..=30,
        start_line_column: 43,
        end_line_column: 44,
    },
}
-----------------
Token: Return Keyword
Token Value: No Value
Token String: "ret"
Span: Span {
    byte_span: 596..599,
    line_span: LineSpan {
        lines: 31..=31,
        start_line_column: 4,
        end_line_column: 7,
    },
}
-----------------
Token: Identifier
Token Value: "first"
Token String: "first"
Span: Span {
    byte_span: 600..605,
    line_span: LineSpan {
        lines: 31..=31,
        start_line_column: 8,
        end_line_column: 13,
    },
}
-----------------
Token: Plus
Token Value: No Value
Token String: "+"
Span: Span {
    byte_span: 606..607,
    line_span: LineSpan {
        lines: 31..=31,
        start_line_column: 14,
        end_line_column: 15,
    },
}
-----------------
Token: Identifier
Token Value: "second"
Token String: "second"
Span: Span {
    byte_span: 608..614,
    line_span: LineSpan {
        lines: 31..=31,
        start_line_column: 16,
        end_line_column: 22,
    },
}
-----------------
Token: Type Cast Keyword
Token Value: No Value
Token String: "as"
Span: Span {
    byte_span: 615..617,
    line_span: LineSpan {
        lines: 31..=31,
        start_line_column: 23,
        end_line_column: 25,
    },
}
-----------------
Token: Floating Point Type
Token Value: No Value
Token String: "float"
Span: Span {
    byte_span: 618..623,
    line_span: LineSpan {
        lines: 31..=31,
        start_line_column: 26,
        end_line_column: 31,
    },
}
-----------------
Token: Semicolon
Token Value: No Value
Token String: ";"
Span: Span {
    byte_span: 623..624,
    line_span: LineSpan {
        lines: 31..=31,
        start_line_column: 31,
        end_line_column: 32,
    },
}
-----------------
Token: Closing Brace
Token Value: No Value
Token String: "}"
Span: Span {
    byte_span: 625..626,
    line_span: LineSpan {
        lines: 32..=32,
        start_line_column: 0,
        end_line_column: 1,
    },
}
-----------------






